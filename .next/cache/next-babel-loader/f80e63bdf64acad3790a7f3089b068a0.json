{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar nodemailer = require('nodemailer');\n\nvar API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\nexport function sendMail(senderAddress, Message) {\n  var transport = nodemailer.createTransport({\n    host: 'smtp.mailtrap.io',\n    port: 2525,\n    auth: {\n      user: '2bd4810e6cb2d2',\n      pass: '42a18b35022fd6'\n    }\n  });\n  var message = {\n    from: senderAddress,\n    // Sender address\n    to: 'community-manager@gmail.com',\n    // List of recipients\n    subject: 'Query from Community Webpage',\n    // Subject line\n    text: Message // Plain text body\n\n  };\n  transport.sendMail(message, function (err, info) {\n    if (err) {\n      alert(err);\n    } else {\n      console.log(info);\n    }\n  });\n}\nexport function getEventList() {\n  return _getEventList.apply(this, arguments);\n}\n\nfunction _getEventList() {\n  _getEventList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(API_URL + '/events');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getEventList.apply(this, arguments);\n}\n\nexport function getResourceList(_x, _x2) {\n  return _getResourceList.apply(this, arguments);\n} //future scope\n// export  async function putResource(){\n// }\n\nfunction _getResourceList() {\n  _getResourceList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, type) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(API_URL + '/tutorials');\n\n          case 2:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.json());\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getResourceList.apply(this, arguments);\n}\n\nexport function getChats() {\n  return _getChats.apply(this, arguments);\n}\n\nfunction _getChats() {\n  _getChats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(API_URL + '/converstions');\n\n          case 2:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getChats.apply(this, arguments);\n}\n\nexport function putChat(user, msg, date_time) {\n  var data = {\n    message: msg,\n    username: user,\n    date: date_time\n  };\n}","map":{"version":3,"sources":["/home/ajay/Desktop/webdev/community-app/frontend/lib/utility.js"],"names":["nodemailer","require","API_URL","process","env","NEXT_PUBLIC_API_URL","sendMail","senderAddress","Message","transport","createTransport","host","port","auth","user","pass","message","from","to","subject","text","err","info","alert","console","log","getEventList","fetch","res","json","data","getResourceList","name","type","getChats","putChat","msg","date_time","username","date"],"mappings":";;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AAEA,OAAQ,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,OAAjC,EAAyC;AAC7C,MAAIC,SAAS,GAAGT,UAAU,CAACU,eAAX,CAA2B;AACvCC,IAAAA,IAAI,EAAE,kBADiC;AAEvCC,IAAAA,IAAI,EAAE,IAFiC;AAGvCC,IAAAA,IAAI,EAAE;AACHC,MAAAA,IAAI,EAAE,gBADH;AAEHC,MAAAA,IAAI,EAAE;AAFH;AAHiC,GAA3B,CAAhB;AAQA,MAAMC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAEV,aADM;AACS;AACrBW,IAAAA,EAAE,EAAE,6BAFQ;AAE+B;AAC3CC,IAAAA,OAAO,EAAE,8BAHG;AAG6B;AACzCC,IAAAA,IAAI,EAAEZ,OAJM,CAIE;;AAJF,GAAhB;AAMAC,EAAAA,SAAS,CAACH,QAAV,CAAmBU,OAAnB,EAA4B,UAASK,GAAT,EAAcC,IAAd,EAAoB;AAC5C,QAAID,GAAJ,EAAS;AACPE,MAAAA,KAAK,CAACF,GAAD,CAAL;AACD,KAFD,MAEO;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AACJ,GAND;AAOH;AACD,gBAAsBI,YAAtB;AAAA;AAAA;;;2EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,KAAK,CAACzB,OAAO,GAAC,SAAT,CADpB;;AAAA;AACG0B,YAAAA,GADH;AAAA;AAAA,mBAEgBA,GAAG,CAACC,IAAJ,EAFhB;;AAAA;AAEGC,YAAAA,IAFH;AAAA,6CAGIA,IAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,gBAAuBC,eAAvB;AAAA;AAAA,C,CAKA;AACA;AAEA;;;8EARQ,kBAA+BC,IAA/B,EAAqCC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcN,KAAK,CAACzB,OAAO,GAAC,YAAT,CADnB;;AAAA;AACE0B,YAAAA,GADF;AAAA,8CAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASR,gBAAsBK,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeP,KAAK,CAACzB,OAAO,GAAC,eAAT,CADpB;;AAAA;AACG0B,YAAAA,GADH;AAAA,8CAEIA,GAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,OAAO,SAASO,OAAT,CAAiBrB,IAAjB,EAAuBsB,GAAvB,EAA4BC,SAA5B,EAAsC;AACzC,MAAMP,IAAI,GAAC;AACPd,IAAAA,OAAO,EAAEoB,GADF;AAEPE,IAAAA,QAAQ,EAAExB,IAFH;AAGPyB,IAAAA,IAAI,EAAEF;AAHC,GAAX;AAMH","sourcesContent":["const nodemailer = require('nodemailer');\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\nexport  function sendMail(senderAddress, Message){\n    var transport = nodemailer.createTransport({\n        host: 'smtp.mailtrap.io',\n        port: 2525,\n        auth: {\n           user: '2bd4810e6cb2d2',\n           pass: '42a18b35022fd6'\n        }\n    });\n    const message = {\n        from: senderAddress, // Sender address\n        to: 'community-manager@gmail.com',         // List of recipients\n        subject: 'Query from Community Webpage', // Subject line\n        text: Message // Plain text body\n    };\n    transport.sendMail(message, function(err, info) {\n        if (err) {\n          alert(err);\n        } else {\n          console.log(info);\n        }\n    });\n}\nexport async function getEventList(){\n    const res = await fetch(API_URL+'/events');\n    const data = await res.json();\n    return data;\n\n}\n\n\nexport  async function getResourceList(name, type){\n    const res = await fetch(API_URL+'/tutorials');\n    return res.json() ;\n}\n\n//future scope\n// export  async function putResource(){\n\n// }\nexport async function getChats(){\n    const res = await fetch(API_URL+'/converstions');\n    return res;\n}\n\nexport function putChat(user, msg, date_time){\n    const data={\n        message: msg,\n        username: user,\n        date: date_time\n    }\n\n}"]},"metadata":{},"sourceType":"module"}